(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{509:function(s,a,t){"use strict";t.r(a);var n=t(28),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"数据结构基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据结构基本概念"}},[s._v("#")]),s._v(" 数据结构基本概念")]),s._v(" "),t("p",[s._v("数据")]),s._v(" "),t("p",[s._v("数据项")]),s._v(" "),t("p",[s._v("数据元素")]),s._v(" "),t("p",[s._v("数据对象")]),s._v(" "),t("p",[s._v("数据类型")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("原子类型")])]),s._v(" "),t("li",[t("p",[s._v("结构类型")])]),s._v(" "),t("li",[t("p",[s._v("抽象数据类型")])])]),s._v(" "),t("p",[s._v("数据结构 描述数据元素相互间的关系")]),s._v(" "),t("p",[s._v("数据结构三要素")]),s._v(" "),t("ul",[t("li",[s._v("逻辑结构（算法的设计）\n"),t("ul",[t("li",[s._v("线性")]),s._v(" "),t("li",[s._v("非线性")])])]),s._v(" "),t("li",[s._v("存储结构（算法的实现）\n"),t("ul",[t("li",[s._v("顺序存储")]),s._v(" "),t("li",[s._v("链式存储")]),s._v(" "),t("li",[s._v("索引存储")]),s._v(" "),t("li",[s._v("散列存储")])])]),s._v(" "),t("li",[s._v("数据的运算\n"),t("ul",[t("li",[s._v("运算的定义")]),s._v(" "),t("li",[s._v("运算的实现")])])])]),s._v(" "),t("h2",{attrs:{id:"算法和算法评价"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算法和算法评价"}},[s._v("#")]),s._v(" 算法和算法评价")]),s._v(" "),t("h3",{attrs:{id:"基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[s._v("#")]),s._v(" 基本概念")]),s._v(" "),t("p",[s._v("是求解问题的步骤描述")]),s._v(" "),t("p",[s._v("算法特征")]),s._v(" "),t("ul",[t("li",[s._v("有确可输出")])]),s._v(" "),t("p",[s._v("好算法的目标")]),s._v(" "),t("ul",[t("li",[s._v("正可见高低")])]),s._v(" "),t("h3",{attrs:{id:"算法效率的度量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算法效率的度量"}},[s._v("#")]),s._v(" 算法效率的度量")]),s._v(" "),t("p",[s._v("时间复杂度、空间复杂度")]),s._v(" "),t("h4",{attrs:{id:"时间复杂度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度"}},[s._v("#")]),s._v(" 时间复杂度")]),s._v(" "),t("p",[s._v("不仅依赖规模，也取决于输入数据的性质")]),s._v(" "),t("p",[s._v("语句频度")]),s._v(" "),t("p",[s._v("T (n)：所有语句频度之和")]),s._v(" "),t("p",[s._v("f (n)：基本运算频度")]),s._v(" "),t("p",[s._v("最坏时间复杂度")]),s._v(" "),t("p",[s._v("平均时间复杂度")]),s._v(" "),t("p",[s._v("最好时间复杂度")]),s._v(" "),t("p",[s._v("加法规则：相加取最大数量级")]),s._v(" "),t("p",[s._v("乘法规则：相乘数量级")]),s._v(" "),t("p",[s._v("渐进时间复杂度：常对幂指阶")]),s._v(" "),t("h4",{attrs:{id:"空间复杂度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#空间复杂度"}},[s._v("#")]),s._v(" 空间复杂度")]),s._v(" "),t("p",[s._v("S (n)：算法耗费的存储空间")]),s._v(" "),t("p",[s._v("算法原地工作，辅助空间为常量 O (1)")]),s._v(" "),t("h3",{attrs:{id:"解题技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解题技巧"}},[s._v("#")]),s._v(" 解题技巧")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("循环体中变量参与循环条件判断：找出主体语句中与 T (n) 成正比的循环变量，将之带入条件中进行计算")])]),s._v(" "),t("li",[t("p",[s._v("循环主体中变量与循环条件无关：采用数学归纳法或直接累计循环次数，只关注主体语句执行次数。分为递归或非递归：")])])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("递归程序：公式进行递推")])]),s._v(" "),t("li",[t("p",[s._v("非递归程序：直接累次计数")])])]),s._v(" "),t("h2",{attrs:{id:"线性表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#线性表"}},[s._v("#")]),s._v(" 线性表")]),s._v(" "),t("h3",{attrs:{id:"基本概念-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本概念-2"}},[s._v("#")]),s._v(" 基本概念")]),s._v(" "),t("p",[s._v("相同数据类型，有限序列。")]),s._v(" "),t("p",[s._v("表头、表尾，直接前驱、直接后继、空表。")]),s._v(" "),t("p",[s._v("注意区分顺序表和链表与之区别。")]),s._v(" "),t("h3",{attrs:{id:"静态分配与动态分配定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态分配与动态分配定义"}},[s._v("#")]),s._v(" 静态分配与动态分配定义")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 静态分配")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("MaxSize")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    ElemType data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("MaxSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前长度")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("SqList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 动态分配")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("InitSize")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    ElemType "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 动态分配数组指针")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" MaxSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最大容量和当前长度")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("SqList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Element "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("malloc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ElemType"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("InitSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始分配")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"基本操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本操作"}},[s._v("#")]),s._v(" 基本操作")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("InitList")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("L"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始化，构造空表。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Length")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("L"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 求表长")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("LocateElem")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("L"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 按值查找")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("GetElem")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("L"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 按位查找")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ListInsert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("L"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定位置插入")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ListDelete")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("L"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 删除指定位置元素，用e返回")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("PrintList")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("L"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 顺序输出所有元素")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Empty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("L"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 判空")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("DestroyList")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("L"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 销毁")]),s._v("\n    \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("对表中元素进行增删改操作使用 &")]),s._v(" "),t("h2",{attrs:{id:"顺序表示-顺序表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#顺序表示-顺序表"}},[s._v("#")]),s._v(" 顺序表示（顺序表）")]),s._v(" "),t("p",[s._v("地址连续，存储密度高，随机访问")]),s._v(" "),t("p",[s._v("使用顺序存储，逻辑顺序与物理顺序相同。")]),s._v(" "),t("p",[s._v("注意区分线性表中位序从 1 开始，数组则是从 0 开始。")]),s._v(" "),t("h3",{attrs:{id:"静态分配与动态分配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态分配与动态分配"}},[s._v("#")]),s._v(" 静态分配与动态分配")]),s._v(" "),t("ul",[t("li",[s._v("静态分配 空间固定，满了溢出")]),s._v(" "),t("li",[s._v("动态分配 空间固定，满了申请，转移数据"),t("br"),s._v("\n动态分配利用指针，但并非链式存储。")])]),s._v(" "),t("h3",{attrs:{id:"基本操作的实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本操作的实现"}},[s._v("#")]),s._v(" 基本操作的实现")]),s._v(" "),t("h4",{attrs:{id:"插入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插入"}},[s._v("#")]),s._v(" 插入")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("分析最好、最坏、平均")]),s._v(" "),t("h4",{attrs:{id:"删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[s._v("#")]),s._v(" 删除")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("分析最好、最坏、平均")]),s._v(" "),t("h4",{attrs:{id:"按值查找-顺序查找"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#按值查找-顺序查找"}},[s._v("#")]),s._v(" 按值查找（顺序查找）")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("分析最好、最坏、平均")]),s._v(" "),t("h2",{attrs:{id:"链式表示-链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#链式表示-链表"}},[s._v("#")]),s._v(" 链式表示（链表）")]),s._v(" "),t("p",[s._v("又称单链表，浪费存储空间。"),t("br"),s._v("\n查找需要从头遍历。"),t("br"),s._v("\n非随机存取，只需修改指针。"),t("br"),s._v("\n通过结点存储数据元素和后继指针：")]),s._v(" "),t("ul",[t("li",[s._v("数据域")]),s._v(" "),t("li",[s._v("指针域"),t("br"),s._v("\n带头指针：单链表第一个结点前附加一个头结点，通常不存信息。")]),s._v(" "),t("li",[s._v("方便操作，无需特殊处理")]),s._v(" "),t("li",[s._v("头指针始终非空，空表非空表处理得到统一"),t("br"),s._v("\n不带头结点：直接指向第一个结点。")])]),s._v(" "),t("h3",{attrs:{id:"基本操作实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本操作实现"}},[s._v("#")]),s._v(" 基本操作实现")]),s._v(" "),t("h4",{attrs:{id:"头插法建立单链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#头插法建立单链表"}},[s._v("#")]),s._v(" 头插法建立单链表")]),s._v(" "),t("p",[s._v("新结点插入表头（头结点）之后，输出与输入相反")]),s._v(" "),t("div",{staticClass:"language-C line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("时复：单个结点  "),t("code",[s._v("O(1)")]),s._v(" ，总时间  "),t("code",[s._v("O(n)")])]),s._v(" "),t("h4",{attrs:{id:"尾插法建立单链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#尾插法建立单链表"}},[s._v("#")]),s._v(" 尾插法建立单链表")]),s._v(" "),t("p",[s._v("增加尾指针 r（始终指向尾结点），新结点插到表尾")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("时复：同上")]),s._v(" "),t("h4",{attrs:{id:"按序号查找结点值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#按序号查找结点值"}},[s._v("#")]),s._v(" 按序号查找结点值")]),s._v(" "),t("p",[s._v("从第一个结点出发，遍历整个链表，直到第 i 个结点")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("时复： "),t("code",[s._v("O(n)")])]),s._v(" "),t("h4",{attrs:{id:"按值查找结点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#按值查找结点"}},[s._v("#")]),s._v(" 按值查找结点")]),s._v(" "),t("p",[s._v("从第一个结点开始，遍历整个链表，存在返回节点指针，否则返回 NULL")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("时复： "),t("code",[s._v("O(n)")])]),s._v(" "),t("h4",{attrs:{id:"插入结点操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插入结点操作"}},[s._v("#")]),s._v(" 插入结点操作")]),s._v(" "),t("ol",[t("li",[s._v("检查合法性")]),s._v(" "),t("li",[s._v("调用查找结点函数，查找第 i-1 个节点，改变指针指向")])]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("前插操作 在某结点前面插入新节点，后插与之相反，单链表中常用后插。")]),s._v(" "),t("ul",[t("li",[s._v("使用临时变量，前插转后插。")])]),s._v(" "),t("p",[s._v("时复： "),t("code",[s._v("O(n)")])]),s._v(" "),t("p",[s._v("给定结点，时复： "),t("code",[s._v("O(1)")])]),s._v(" "),t("h4",{attrs:{id:"删除结点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除结点"}},[s._v("#")]),s._v(" 删除结点")]),s._v(" "),t("p",[s._v("改变指针指向，free")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("时复： "),t("code",[s._v("O(n)")])]),s._v(" "),t("h4",{attrs:{id:"求表长"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#求表长"}},[s._v("#")]),s._v(" 求表长")]),s._v(" "),t("p",[s._v("遍历结点，计数器 + 1")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//..")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"双链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#双链表"}},[s._v("#")]),s._v(" 双链表")]),s._v(" "),t("p",[s._v("单链表基础上增加前驱节点指针域 prior")]),s._v(" "),t("p",[s._v("插入和删除有别与单链表，额外需要修改前驱结点指针")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"循环链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#循环链表"}},[s._v("#")]),s._v(" 循环链表")]),s._v(" "),t("p",[s._v("循环单链表：尾结点指向头结点，头结点是否指向自身为判空条件")]),s._v(" "),t("p",[t("strong",[s._v("对单链表常做操作是在表头和表尾进行，仅设尾指针的循环单链表更高效")])]),s._v(" "),t("p",[s._v("循环双链表：头、尾结点互相指向，前驱、后继指针域都指向头结点为判空条件")]),s._v(" "),t("h3",{attrs:{id:"静态链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态链表"}},[s._v("#")]),s._v(" 静态链表")]),s._v(" "),t("p",[s._v("借助数组描述线性表的链式存储结构，结点同样有数据域指针域")]),s._v(" "),t("p",[s._v("数据域存数据，指针域存数组下标（游标），指针域 - 1 表示表尾结点")]),s._v(" "),t("h2",{attrs:{id:"顺序表和链表的比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#顺序表和链表的比较"}},[s._v("#")]),s._v(" 顺序表和链表的比较")]),s._v(" "),t("ol",[t("li",[s._v("存取（读写）方式")])]),s._v(" "),t("ul",[t("li",[s._v("顺序表可顺序存取、随机存取，链表只能从表头顺序存取")])]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("逻辑结构与物理结构")])]),s._v(" "),t("ul",[t("li",[s._v("顺序表二者一致，链表不一定一致，通过指针表示逻辑关系")])]),s._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[s._v("查找、插入和删除")])]),s._v(" "),t("ul",[t("li",[s._v("按值查找：无序均为 O (n)，有序则顺序表 "),t("code",[s._v("O(log2^n)")]),s._v(" （采用折半查找）")]),s._v(" "),t("li",[s._v("按序号查找：顺序表 O (1)（随机存取），链表 O (n)")]),s._v(" "),t("li",[s._v("顺序表插入删除平均需移动半个表长的元素，链表仅需修改指针域。")])]),s._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[s._v("空间分配")])]),s._v(" "),t("ul",[t("li",[s._v("顺序存储静态存储装满上溢，动态存储可扩充，移动大量元素导致效率降低，存在分配内存失败。")]),s._v(" "),t("li",[s._v("链式存储需要时分配，操作灵活、高效（针对空间分配）。")])]),s._v(" "),t("h2",{attrs:{id:"如何选取存储结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何选取存储结构"}},[s._v("#")]),s._v(" 如何选取存储结构")]),s._v(" "),t("ol",[t("li",[s._v("基于存储考虑 无法预估不宜采用顺序表")]),s._v(" "),t("li",[s._v("基于运算 侧重按序号访问顺序表，插入删除时，元素过多链表优于顺序表（顺序表移动元素，链表修改指针）")]),s._v(" "),t("li",[s._v("基于环境 使用的编程语言等"),t("br"),s._v("\n较稳定的线性表选顺序存储，频繁插入、删除的（动态性较强）链式存储。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);